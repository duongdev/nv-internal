generator client {
  provider        = "prisma-client-js"
  // Output the generated Prisma client into the prisma-client workspace package
  output          = "../../../packages/prisma-client/generated"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  PREPARING
  READY
  IN_PROGRESS
  ON_HOLD
  COMPLETED
}

model Task {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  title         String
  description   String?
  customer      Customer?    @relation(fields: [customerId], references: [id])
  customerId    String?
  status        TaskStatus   @default(PREPARING)
  assigneeIds   String[]
  startedAt     DateTime?
  completedAt   DateTime?
  geoLocation   GeoLocation? @relation(fields: [geoLocationId], references: [id])
  geoLocationId String?
}

model GeoLocation {
  id        String   @id @default(cuid())
  address   String?
  name      String?
  lat       Float
  lng       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]

  @@index([lat, lng])
}

model Customer {
  id        String   @id @default(cuid())
  name      String?
  phone     String?
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([phone])
}

model Activity {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?
  topic     String
  action    String
  payload   Json?

  @@index([userId])
  @@index([createdAt])
  @@index([topic])
}
